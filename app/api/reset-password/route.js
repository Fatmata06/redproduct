import { NextResponse } from "next/server";
import dbConnect from "@/lib/mongodb";
import User from "@/models/user";
import { PasswordReset } from "@/models/PasswordReset";
import bcrypt from "bcryptjs";

export async function POST(req) {
  await dbConnect();
  const { token, newPassword } = await req.json();

  if (!token || !newPassword) {
    return NextResponse.json({ message: "Tous les champs sont obligatoires" }, { status: 400 });
  }

  
  // ðŸ”¹ Trouver l'utilisateur associÃ© Ã  l'email
  const user = await User.findOne({ email: resetRequest.email });
  if (!user) {
    return NextResponse.json({ message: "Utilisateur introuvable" }, { status: 404 });
  }

  // ðŸ”¹ Hasher le nouveau mot de passe
  const hashedPassword = await bcrypt.hash(newPassword, 10);
  user.password = hashedPassword;
  await user.save();

  // ðŸ”¹ Supprimer le token de rÃ©initialisation aprÃ¨s utilisation
  await PasswordReset.deleteOne({ token });

  return NextResponse.json({ message: "Mot de passe mis Ã  jour avec succÃ¨s !" }, { status:Â 200Â });
}